# Generated by Django 5.2.4 on 2025-08-15 13:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


def fill_levels(apps, schema_editor):
    Level = apps.get_model("tor", "Level")
    Level.objects.create(name="DEBUG")
    Level.objects.create(name="INFO")
    Level.objects.create(name="WARNING")
    Level.objects.create(name="ERROR")


def fill_statuses(apps, schema_editor):

    Level = apps.get_model("tor", "Level")
    DEBUG = Level.objects.get(name="DEBUG")
    INFO = Level.objects.get(name="INFO")
    WARNING = Level.objects.get(name="WARNING")
    ERROR = Level.objects.get(name="ERROR")

    TorrentStatus = apps.get_model("tor", "TorrentStatus")
    TorrentStatus.objects.create(name="Unknown", level=DEBUG)

    TorrentStatus.objects.create(name="Client: Init", level=INFO)
    TorrentStatus.objects.create(name="Client: Added", level=INFO)
    TorrentStatus.objects.create(name="Client: In Progress", level=INFO)
    TorrentStatus.objects.create(name="Client: Done", level=INFO)
    TorrentStatus.objects.create(name="Client: Error", level=ERROR)

    TorrentStatus.objects.create(name="Local download: Error", level=ERROR)
    TorrentStatus.objects.create(name="Local download: New", level=INFO)
    TorrentStatus.objects.create(name="Local download: Progress", level=INFO)
    TorrentStatus.objects.create(name="Local download: Done", level=INFO)

    TorrentStatus.objects.create(name="Finish: Started", level=INFO)
    TorrentStatus.objects.create(name="Finish: Progress", level=INFO)
    TorrentStatus.objects.create(name="Finish: Done", level=INFO)
    TorrentStatus.objects.create(name="Finish: Error", level=ERROR)


def get_default_level():
    from tor.models import Level

    return Level.objects.get(name="INFO").id


def get_default_status():
    from tor.models import TorrentStatus

    return TorrentStatus.objects.get(name="Unknown").id


class Migration(migrations.Migration):

    dependencies = [
        ("tor", "0027_torrent_local_status_torrent_local_status_level"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="errorlog",
            name="level",
        ),
        migrations.RemoveField(
            model_name="torrent",
            name="local_status",
        ),
        migrations.RemoveField(
            model_name="torrent",
            name="local_status_level",
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
            ],
        ),
        migrations.RunPython(fill_levels),
        migrations.AddField(
            model_name="ariadownloadstatus",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ariadownloadstatus",
            name="finished_at",
            field=models.DateTimeField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="torrent",
            name="finished_at",
            field=models.DateTimeField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="errorlog",
            name="level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="tor.level",
                default=get_default_level,
            ),
        ),
        migrations.CreateModel(
            name="TorrentStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tor.level"
                    ),
                ),
            ],
        ),
        migrations.RunPython(fill_statuses),
        migrations.AddField(
            model_name="torrent",
            name="local_status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="tor.torrentstatus",
                default=get_default_status,
            ),
        ),
    ]
