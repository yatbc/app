"""
Django settings for torbox project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
if DEBUG:
    PERSISTENT_DIR = BASE_DIR / "data" / "persistent"
else:
    PERSISTENT_DIR = Path("/data") / "persistent"
load_dotenv(PERSISTENT_DIR / ".env")
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

STATIC_ROOT = PERSISTENT_DIR / "http/production_files/"

STATIC_URL = "/static/"

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"

ALLOWED_HOSTS = ["*"]

# Application definition
BOOTSTRAP5 = {
    "use_cdns": False,
}
TASKS = {"default": {"BACKEND": "django_tasks.backends.database.DatabaseBackend"}}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "handlers": {
        "file": {
            "class": "logging.handlers.RotatingFileHandler",
            "maxBytes": 1024 * 1024 * 10,
            "backupCount": 10,
            "level": "DEBUG",
            "filename": str(PERSISTENT_DIR / "log.log"),
            "formatter": "verbose",
        },
    },
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
    },
    "loggers": {
        "django": {"handlers": ["file"], "level": "INFO", "propagate": True},
        "torbox": {"handlers": ["file"], "level": "DEBUG", "propagate": True},
    },
}

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "constance",
    "constance.backends.database",
    "tor",
    "django_bootstrap5",
    "django_tasks",
    "django_tasks.backends.database",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "tor.middleware.RequestTimeMiddleware",
]

CONSTANCE_CONFIG = {
    "USE_TRANSMISSION": (False, "Use Transmission as local torrent client"),
    "TRANSMISSION_HOST": ("localhost", "Transmission host"),
    "TRANSMISSION_PORT": (9091, "Transmission port"),
    "TRANSMISSION_USER": ("", "Transmission username"),
    "TRANSMISSION_PASSWORD": ("", "Transmission password"),
    "ARIA2_HOST": ("yatbc-aria", "Aria2 host"),
    "ARIA2_PORT": (6800, "Aria2 port"),
    "ARIA2_PASSWORD": (os.getenv("ARIA_SECRET_KEY"), "Aria2 secret"),
    "TORBOX_HOST": ("torbox.app", "Torbox host"),
    "TORBOX_API": (
        "api",
        'Api part of Torbox host, e.g. if full host for api is https://api.torbox.app, then this should be "api"',
    ),
    "TORBOX_SEARCH_API": (
        "search-api",
        'Search Api part of Torbox host, e.g. if full host for search api is https://search-api.torbox.app, then this should be "search-api"',
    ),
    "TORBOX_API_KEY": ("", "Torbox API key"),
    "USE_CDN": (True, "Use CDN for js files like bootstrap, alpine js, etc."),
    "SHOW_CONFIG_ON_START": (True, "Show config on start"),
    "USE_DARK": (True, "Use dark theme"),
    "TRANSMISSION_DIR": (
        "/data/tor",
        "Where does Transmission store downloaded files?",
    ),
    "ARIA2_DIR": ("/data/aria2", "Where Aria2 should store downloaded files"),
}

ROOT_URLCONF = "torbox.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "torbox.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": PERSISTENT_DIR / "db.sqlite3",
        "OPTIONS": {
            "timeout": 20,
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = os.getenv("TZ")

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
